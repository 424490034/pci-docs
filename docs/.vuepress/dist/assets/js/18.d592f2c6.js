(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{498:function(t,a,s){t.exports=s.p+"assets/img/image-20220511150602593.879ea8c3.png"},536:function(t,a,s){"use strict";s.r(a);var r=s(31),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"项目管理-定制化说明"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#项目管理-定制化说明"}},[t._v("#")]),t._v(" 项目管理-定制化说明")]),t._v(" "),r("p",[t._v("​\t定制化需求是笔者在接入微前端时候的一个想法,由于项目拆分较多,每个项目都是对应的单个项目,如果打包后的文件是需要存放到一个统一的文件夹下面进行统一管理,那么"),r("strong",[t._v("每次打完包,就需要手动ctrl C+V")]),t._v(",偶尔几次还好每次都这样,就有点烦了,所以就产生了在每次执行项目执行的前后进行")]),t._v(" "),r("p",[t._v("​\t当然,由于当前软件尚处于刚起步状态,所支持的定制化较少,后续会增加,以下会介绍已有的几个定制化操作")]),t._v(" "),r("h2",{attrs:{id:"执行指令之前-拉取最新代码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#执行指令之前-拉取最新代码"}},[t._v("#")]),t._v(" 执行指令之前-拉取最新代码")]),t._v(" "),r("p",[t._v("​\t原理很简单,就是在执行配置的项目指令之前,git pull 当前分支的代码 拉取完成后就进行对应代码的执行")]),t._v(" "),r("h2",{attrs:{id:"执行指令之前-自定义代码执行"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#执行指令之前-自定义代码执行"}},[t._v("#")]),t._v(" 执行指令之前-自定义代码执行")]),t._v(" "),r("p",[t._v("​\t即在执行项目指令之前,先执行自定义的指令,如果是多个指令,可以用 && 隔开即可")]),t._v(" "),r("h2",{attrs:{id:"执行指令之后-定向打包"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#执行指令之后-定向打包"}},[t._v("#")]),t._v(" 执行指令之后-定向打包")]),t._v(" "),r("p",[t._v("​\t选择该指令后会额外填写几个配置项")]),t._v(" "),r("p",[r("img",{attrs:{src:s(498),alt:"image-20220511150602593"}})]),t._v(" "),r("p",[t._v("在项目执行执行完成后就会进入对应逻辑执行,手动介绍并不会进入")]),t._v(" "),r("h2",{attrs:{id:"后续定制化指令思考中"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#后续定制化指令思考中"}},[t._v("#")]),t._v(" 后续定制化指令思考中~")])])}),[],!1,null,null,null);a.default=e.exports}}]);